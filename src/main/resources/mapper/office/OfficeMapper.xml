<?xml version="1.0" encoding="UTF-8" ?>
<!--
  ~ The MIT License (MIT)
  ~
  ~ Copyright (c) 2014-2016 abel533@gmail.com
  ~
  ~ Permission is hereby granted, free of charge, to any person obtaining a copy
  ~ of this software and associated documentation files (the "Software"), to deal
  ~ in the Software without restriction, including without limitation the rights
  ~ to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
  ~ copies of the Software, and to permit persons to whom the Software is
  ~ furnished to do so, subject to the following conditions:
  ~
  ~ The above copyright notice and this permission notice shall be included in
  ~ all copies or substantial portions of the Software.
  ~
  ~ THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
  ~ IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
  ~ FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
  ~ AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
  ~ LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
  ~ OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
  ~ THE SOFTWARE.
  -->

<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="ringbackstage.web.dao.office.OfficeMapper">
	
	<!-- 增加 -->
	<insert id="add" parameterType="ringbackstage.web.model.office.AdminOffice">
		INSERT INTO admin_office (id,name,parent_id,parent_ids,sort,create_date,create_by,update_date,update_by,remarks,del_flag) 
		VALUES(  #{id},#{name},#{parentId},#{parentIds},#{sort},#{createDate},#{createBy},#{updateDate},#{updateBy},#{remarks},#{delFlag});
	</insert>
	
	<!-- 删除 -->
	<update id="delete" parameterType="ringbackstage.web.model.office.AdminOffice">
		UPDATE admin_office SET
		del_flag = '1',
		update_date = #{updateDate},
		update_by = #{updateBy}
		WHERE id = #{id}
	</update>
	
	<!-- 修改 -->
	<update id="update" parameterType="ringbackstage.web.model.office.AdminOffice">
		UPDATE admin_office SET
		name = #{name},
		parent_id = #{parentId},
		parent_ids = #{parentIds},
		sort = #{sort},
		update_date = #{updateDate},
		update_by = #{updateBy},
		remarks = #{remarks}
		WHERE id = #{id}
	</update>
	
	<!-- 未删除的列表 -->
	<select id="findList" resultType="ringbackstage.web.model.office.AdminOffice" resultMap="adminOfficeResultMap">
		SELECT t.*,t.id as oper,p.name as parent_name FROM admin_office t
		LEFT JOIN admin_office p ON t.parent_id = p.id
		WHERE t.del_flag &lt;&gt; 1
		<if test=" name != null and name != '' ">
			AND t.name like '%${name}%'
		</if>
		<if test=" parentId != null and parentId != '' ">
			AND (FIND_IN_SET(#{parentId},t.parent_ids) > 0 OR t.id = #{parentId} )
		</if>
		ORDER BY t.sort,t.create_date DESC
	</select>
	
	<!-- 左边树形 -->
	<select id="trees" resultType="ringbackstage.web.model.office.AdminOffice" resultMap="adminOfficeResultMap">
		SELECT * FROM admin_office
		WHERE del_flag &lt;&gt; 1
		<if test=" parentId != null and parentId != '' ">
			AND parent_id = #{parentId}
		</if>
		<if test=" parentId == null or parentId == '' ">
			AND (parent_id IS NULL OR parent_id = '')
		</if>		
		ORDER BY sort,create_date DESC
	</select>
	
	<!-- 根据ID查询 -->
	<select id="findById" resultType="string" resultMap="adminOfficeResultMap">
		SELECT t.*,t.id as oper,p.name as parent_name FROM admin_office t
		LEFT JOIN admin_office p ON t.parent_id = p.id
		WHERE t.id = #{id}
	</select>
	
	<resultMap type="ringbackstage.web.model.office.AdminOffice" id="adminOfficeResultMap">
		<result property="id" column="id" />
		<result property="name" column="name" />
		<result property="parentId" column="parent_id" />
		<result property="parentName" column="parent_name" />
		<result property="parentIds" column="parent_ids" />
		<result property="sort" column="sort" />
		<result property="createDate" column="create_date" />
		<result property="createBy" column="create_by" />
		<result property="updateDate" column="update_date" />
		<result property="updateBy" column="update_by" />
		<result property="remarks" column="remarks" />
		<result property="delFlag" column="del_flag" />
	</resultMap>
	
</mapper>